# Generated by Django 4.2.7 on 2025-08-02 17:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import files.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'DOCX'), ('jpg', 'JPG'), ('jpeg', 'JPEG'), ('png', 'PNG')], max_length=10)),
                ('file_size', models.BigIntegerField()),
                ('original_file', models.FileField(upload_to=files.models.upload_to_temp, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('processed_file', models.FileField(blank=True, null=True, upload_to=files.models.upload_to_processed)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=files.models.upload_to_thumbnails)),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('processed', 'Processed'), ('error', 'Error')], default='uploaded', max_length=20)),
                ('is_edited', models.BooleanField(default=False)),
                ('page_count', models.IntegerField(default=1)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'db_table': 'files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileEditOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('rotate', 'Rotate'), ('delete_page', 'Delete Page'), ('crop', 'Crop'), ('merge', 'Merge'), ('split', 'Split'), ('watermark', 'Watermark')], max_length=20)),
                ('parameters', models.JSONField(default=dict)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'File Edit Operation',
                'verbose_name_plural': 'File Edit Operations',
                'db_table': 'file_edit_operations',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='FileProcessingTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_type', models.CharField(choices=[('thumbnail_generation', 'Thumbnail Generation'), ('pdf_optimization', 'PDF Optimization'), ('format_conversion', 'Format Conversion'), ('compression', 'Compression'), ('virus_scan', 'Virus Scan')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('result_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'File Processing Task',
                'verbose_name_plural': 'File Processing Tasks',
                'db_table': 'file_processing_tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('share_token', models.CharField(max_length=64, unique=True)),
                ('permission', models.CharField(choices=[('view', 'View Only'), ('download', 'Download'), ('edit', 'Edit')], default='view', max_length=10)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('access_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='files.file')),
            ],
            options={
                'verbose_name': 'File Share',
                'verbose_name_plural': 'File Shares',
                'db_table': 'file_shares',
                'ordering': ['-created_at'],
            },
        ),
    ]
