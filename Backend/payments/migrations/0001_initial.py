# Generated by Django 4.2.7 on 2025-08-02 17:43

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bill_to_name', models.CharField(max_length=100)),
                ('bill_to_email', models.EmailField(max_length=254)),
                ('bill_to_address', models.TextField()),
                ('company_name', models.CharField(default='PrintSmart', max_length=100)),
                ('company_address', models.TextField(blank=True)),
                ('company_tax_id', models.CharField(blank=True, max_length=50)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('notes', models.TextField(blank=True)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('razorpay', 'Razorpay'), ('stripe', 'Stripe'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer'), ('wallet', 'Wallet'), ('admin_credit', 'Admin Credit')], default='razorpay', max_length=20)),
                ('provider_payment_id', models.CharField(blank=True, max_length=255)),
                ('provider_order_id', models.CharField(blank=True, max_length=255)),
                ('provider_signature', models.CharField(blank=True, max_length=255)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('tokens_purchased', models.IntegerField(default=0)),
                ('tokens_credited', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('reference_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50)),
                ('billing_name', models.CharField(blank=True, max_length=100)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('billing_phone', models.CharField(blank=True, max_length=15)),
                ('billing_address', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('razorpay', 'Razorpay'), ('stripe', 'Stripe'), ('paypal', 'PayPal')], max_length=20)),
                ('event_type', models.CharField(max_length=50)),
                ('webhook_id', models.CharField(blank=True, max_length=255)),
                ('payload', models.JSONField(default=dict)),
                ('headers', models.JSONField(default=dict)),
                ('signature', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Payment Webhook',
                'verbose_name_plural': 'Payment Webhooks',
                'db_table': 'payment_webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refund_type', models.CharField(choices=[('full', 'Full Refund'), ('partial', 'Partial Refund'), ('token_adjustment', 'Token Adjustment')], default='full', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('tokens_to_deduct', models.IntegerField(default=0)),
                ('reason', models.TextField()),
                ('provider_refund_id', models.CharField(blank=True, max_length=255)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Refund',
                'verbose_name_plural': 'Refunds',
                'db_table': 'refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TokenPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('token_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('bonus_tokens', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Token Package',
                'verbose_name_plural': 'Token Packages',
                'db_table': 'token_packages',
                'ordering': ['sort_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='TokenTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit'), ('refund', 'Refund'), ('bonus', 'Bonus'), ('admin_adjustment', 'Admin Adjustment')], max_length=20)),
                ('amount', models.IntegerField()),
                ('description', models.TextField()),
                ('balance_before', models.IntegerField(default=0)),
                ('balance_after', models.IntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Token Transaction',
                'verbose_name_plural': 'Token Transactions',
                'db_table': 'token_transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
